{计算机语言发展:
第一代：机器语言
第二代：汇编语言
第三代：高级语言（面向对象，面向过程）
程序：为了让计算机执行某些操作或解决某个问题而编写的一系列有序指令的集合》

}
{java虚拟机和跨平台特性
   jvm（java virtul  machine）
   Java虚拟机代码存储在.class中
   一次编译，多平台运行
   虚拟机本身不跨平台
}
{JAVA语言数据类型：4种整形，2中浮点型，表示字符单元的char以及表示布尔值的boolean型。
       整型：（1）byte  位数（8bits）
        （2） short  位数（16bits）
          （3）int   位数  （32bits）
          （4）long   位数   （64bits）
      浮点型：用来表示有小数部分的值
       float       double(浮点型数据默认为double，如果要使用float型字面常量时，必须添加后缀F或f)
       char型：一般情况下被表示用一对单引号包含的单个字符，
       boolean
}

{java执行过程：编译 （compile）   运行
    
}
{Java垃圾回收（GC）

    通过轮询机制，及时释放内存空间
    无需程序控制
}
{JDK
    --java development kit
    java开发工具包
  JRE
    java rumtime environment
    Java运行环境
    配置：
    path    系统执行文件搜索路径  
    class path   类执行文件搜索路径
    
}
{类是一种类型，是一个模板；对象是类的具体实现
}
{标识符   
    定义：变量，接口，类，方法等的名称
    命名规则：（1）由数字，字母，下划线，美元符号组成
    （2）字母，下划线，美元符号开始
    （3）区分大小写，没有长度限制
    （4）标识符不能是关键字
    标识符的约定：可读性强，见名知意
}
{关键字：
       定义：Java中有特殊意义的单词
       关键字不能定义为标识符
    注意：关键字都要小写goto const也是关键字，true false不是关键字
}
{字面量     定义：直接使用的一些常量，一般是赋值给变量或直接输出
    
}
{变量：变量就是系统为程序分配的一块内存单元，用来存储各种类型数据

      定义；程序中最基本的存储单元，是内存中的存储区域
           java是强类型编程语言，每个变量属于特定数据类型
           变量必须先声明后使用
    要素：
          变量类型
          变量名称
          作用域
      作用域划分：（1）局部变量：定义在方法或语句块内部，或者方法的参数列表
                  （2）成员变量：定义在方法外部，类内部
      是否静态划分：（1）静态变量（内变量）有static修饰
                     （2）非静态变量：（实例变量）没有static修饰
       数据类型划分：（1）基本数据类型变量    （2）引用数据类型变量
      静态变量是所有对象共享的
      静态方法可以通过类的名称直接访问
    
    
}
{通过命令行配置环境变量：

（1）打开命令提示窗口，输入设置path的命令
    set path=jdk安装目录/bin；%path%
  （2）输入设置classpath的命令
        set classpath=jdk安装目录lib %classpath%
    注意："="两端不能有空格，%path%（%classpath%）是以前的值；如果不加%path%（%classpath%），设置的路径就会覆盖以前的值
    
}
通过系统设置环境变量：





{注释的几种种类：


（1）单行注释：用于为代码中的单个行添加注释。可以注释掉单行代码；
其语法是：用“//”表示注释开始，注释内容从“//”开始到本行结尾。
 （2）区域注释：对于长度为几行的注释，可以用区域注释（又称“多行注释”）
 ；通常使用区域注释描述文件，数据结构，方法和文件说明 。
 创建区域注释；再开头出添加/* 在注释块末尾添加*/。
 （3）文档注释：用于描述java的类；接口；构造器；方法；及字段（field）。
 每个文档被置于注释定界符/**和*/，一个注释对应一个类，接口或成员。
 该注释位于申明之前。
 
    
}
{什么是类？
类就是构造对象的模板或蓝图，   
}
{数据类型间的转换;
1:自动转换：源代码不用任何说名系统就将其转换
byte-short-int-long-float-double
      （char ）     
以上数据类型顺着箭头方向均可自动转换
2：强制类型转换
强制类型转换的格式：目标变量=（转换的目标类型）带转换的变量或数值
3：隐含强制转换
所有的byte，short，和char型自动提升到int型
 如果一个操作数是long型，计算结果就是long型
如果一个操作数是float型，计算结果就是float型
如果一个操作数是double型计算结果就是double型 
    
}
{java中的运算符
1：算数运算符
2：关系和逻辑运算符
3:位运算符
4：赋值运算符
5：其他运算符
（1）算数运算符有+，-，*，/，%（取余运算符）++
（2）
 &与&&的区别：用&连接无论什么情况&两边的表达式都会参与运算，
使用&&相连，左边的为false就不会计算右边的表达式 
}
堆内存(heap)和栈内存(stack)
 }
{流程控制：顺序，选择，循环
查看帮助:命令名+?或则+help,在或则/+help
     
} 

{
   跳转语句： break,continue,return
    break：在switch中表示一个case的结束，退出switch
    如果在循环体中执行了break语句，则循环结束并退出，
    break跳出的是离他最近的一层循环。
    
    continue:continue也是循环控制语句，与break不同的是，continue
    只是中断当前循环，执行continue时，本次循环结束，进入条件判断，
    如果条件满足，进入下一次循环。
    
    return：用于函数或方法的返回，return语句的功能是，退出当前得方法
    使控制流程返回到调用该方法语句之后的下一个语句，return返回的
    值的类型必须与方法返回类型一致，当一个方法声明为void，return语句
    没有返回值，反之则有
    
   }
