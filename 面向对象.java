1：面向对象的优点：
{
    利用面向对象求解问题，使编程接近现实，所有对象被赋予属性和方法，
    使编程更加人性化，面向对象具有更好的重用性，可扩展，更易管理和维护
}
2:  面向对象的特点：
{
    （1）继承：java中使用extends来实现继承，语法
    class SubClassName（字类名） extends SuperClassName（父类名）{......}
    通过继承，子类自动拥有父类的所有属性和方法
    java值支持单根继承，通过接口实现多重继承。
    
    （2）封装：将对象的状态信息隐藏在对象内部，不允许外部称许直接访问对象的内部信息，而是使用该类所提供的方法来实现对对象内部的操作和访问。
    良好的封装可以实现以下目的：
    1：隐藏类的实现细节
    2：让使用者只能通过实现预设的方法来访问数据，可以在方法的内部加入逻辑控制，限制对象变量的不合理访问。
    
    3：可以对数据进行检查，来保证对象信息的完整性。
    
    4：便于修改，提高代码的可维护性。
    
    5：将对象的成员变量与实现细节隐藏起来，不允许外部直接访问。
    
    6：将方法暴露出来，让方法来控制对这些成员变量进行安全的访问和操作
    
    
    （3）多态：（一个方法有不同的体现）
    多态是描述同一个消息可以根据发送消息对象的不同采用多种不同的行为方式
}

2：java中的类，对象，方法：
{   
（1）类：（类里面包含：构造器，成员变量，方法） 类是同一种事物的抽象，是自定义的一种数据类型，是一种自定义变量类型。
1：构造器：构造器是一个类创建对象的根本途径，如果没有一个构造器，这个类通常无法创建实例，java会提供默认的构造器

2：成员变量：成员变量用于定义该类或该类实例所包含的状态数据，

3：方法：方法用来定义该类或该类的实例的行为特征或者功能实现

 【类与对象的关系：类是对象的模板，对象是类的具体实现】  

    （3）方法： 方法由参数序列与方法体构成 
    
    static关键字：static修饰的成员表示属于这个类本身，而不属于该类的单个实例，通常把static修饰的成员变量和方法称为类变量，类方法。不使用static修饰的普通方法，成员变量属于该类的单个实例，通常把它们称为，实例变量，实例方法。
    0：注意：static修饰的成员不能访问没有static修饰的成员。
    
}
