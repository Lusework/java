抽象类：在一个类中有一个或多个构抽象方法 
注意：抽象类不能被实例化
抽象类只能是超类
继承抽象类的子类必须实现抽象方法，或者本身也是
抽象类
抽象方法：
概念；1；一些方法只是被声明，而没有实现(没有方法体)
    2；前面用abstract关键字修饰
    注意：不能被声明为private，static，final
    

抽象类和一般类的异同点：
相同点：抽象类和一般类都是用来描述事物的，都在内部定义了成员
不同点：一般类有足够的信息描述事物，抽象类描述事物的信息一般不足
一般类中不能定义抽象方法，只能定义非抽象方法，
抽象类中可以定义抽象方法，也可以定义非抽象方法
一般类可以实例化
抽象类不可以实例化


抽象类一定是父类吗？
是的，因为需要子类覆盖其方法后才能对子类实例化


抽象类与接口的异同点:
相同点：都是不断向上抽取而来的
不同点：
1，抽象类需要被继承，而且只能是单继承
接口需要被实现，而且可以多实现
2；抽象类可以定义抽象方法和非抽象方法，子类继承后可以直接使用非抽象类
接口中只能定义抽象方法，必须由子类去实现
3；抽象类的继承是is-a关系,定义该体系的共性内容
接口的实现是like-a的关系,定义体系的额外功能




